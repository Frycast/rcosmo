% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CMBDataFrame.R
\name{CMBDataFrame}
\alias{CMBDataFrame}
\title{CMB Data Frames}
\usage{
CMBDataFrame(CMBData = "../../CMB_map_smica1024.fits", coords = "spherical",
  includePolar = FALSE, includeMasks = FALSE, spix = NULL,
  sampleSize = NULL, Nside = NULL, ordering = NULL)
}
\arguments{
\item{CMBData}{can be the output of readFITScmb or it can be a string location of FITS file.}

\item{coords}{can be "spherical," "HEALPix" or "cartesian". If "healpix" then spix must be NULL.}

\item{includePolar}{TRUE if polarisation data is required, otherwise FALSE}

\item{includeMasks}{TRUE if TMASK and PMASK are required, otherwise FALSE}

\item{spix}{a vector of sample pixel indices}

\item{sampleSize}{if a positive integer is given a simple random sample of size sampleSize
will be taken from CMBData}

\item{Nside}{optionally specify the Nside parameter manually}

\item{ordering}{optionally specify the HEALPix ordering scheme (RING or NESTED) manually}
}
\value{
A data frame whose columns contain the pixel center coordinates (longitude, lattitude)
or (x,y,z), CMB intensities (I), and optionally polarisation (Q,U) and masks (TMASK, PMASK).
The row.names attribute of the resulting CMB Data Frame contains HEALPix indices.
}
\description{
The function \code{CMBDataFrame} creates CMB Data Frames. These are a special type of
\link{data.frame} that carry extra information about the HEALPix ordering scheme,
coordinate system, and Nside parameter.
}
\examples{
## Method 1: Read the data while constructing the CMBDataFrame
df <- CMBDataFrame("CMB_map_smica1024.fits")

## Method 2: Read the data first separately using readFITScmb
cmbdat <- readFITScmb("../../CMB_map_smica1024.fits")

# Specify a sample size for a random sample
df2 <- CMBDataFrame(CMBData = cmbdat, sampleSize = 800000)
plotCMB(df2)

# Specify a vector of pixel indices to keep, using spix
df3 <- CMBDataFrame(CMBData = cmbdat, spix = c(2,4,6))

# Take a look at the attributes
attributes(df2)$Nside
attributes(df2)$coords
attributes(df2)$ordering
# The row.names attribute contains HEALPix pixel indices
attributes(df3)$row.names
head(attributes(df2)$row.names, n = 10)
head(attributes(df)$row.names, n = 10)

}
