% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nestSearch.R
\name{nestSearch}
\alias{nestSearch}
\title{Nested Search}
\usage{
nestSearch(target, nside, index.only = FALSE, j = 0:log2(nside),
  demo.plot = FALSE)
}
\arguments{
\item{target}{is a vector of Cartesian coordinates for the target
point on S^2}

\item{nside}{is the nside for which the HEALPix points are searched}

\item{demo.plot}{If TRUE then a plot will be produced with
target pixel in yellow and closest pixel at each step in red}
}
\value{
if \code{index.only = TRUE} then the output will be a HEALPix index.
If \code{index.only} FALSE then the output is the list containing the HEALPix index
and Cartesian coordinate vector of the HEALPix point closest to \code{target}.
}
\description{
Finds the closest HEALPix pixel center to a given \code{target} point,
specified in cartesian coordinates, using an efficient nested search
algorithm. HEALPix indices are all assumed to be in the "nested"
ordering scheme.
}
\examples{
# Find the pix index and Cartesian coordinates of the HEALPix point
# at nside closest to the target point c(0,0,1)
h <- nestSearch(c(0,0,1), nside=1024)
cat("Closest HEALPix point to (0,0,1) at nside = 1024 is (",h$xyz,")")

}
